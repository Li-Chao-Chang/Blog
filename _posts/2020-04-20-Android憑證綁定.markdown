---
layout: post
title:  "Android憑證綁定"
date:   2020-04-20 16:08:21 +0800
categories: jekyll update
---
<font color="#0473E2" id='1'>Android憑證綁定(Java)</font>  
利用okHttp取得憑證得SHA256來進行憑證驗證   
{% highlight ruby %}
//於build.gradle新增okhttp
implementation 'com.squareup.okhttp3:okhttp:4.2.0'

//Import至Class
import okhttp3.OkHttpClient;
import okhttp3.CertificatePinner;
import okhttp3.Request;

//主要程式碼
//請注意Android4.2以後如再MainThread執行httpRequest會引發android.os.NetworkOnMainThreadException
new Thread(new Runnable(){
    @Override
    public void run() {
        String hostname = "ivanli.nctu.me/";
        CertificatePinner certificatePinner = new CertificatePinner.Builder()
            //第一次填入sha256/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=執行後出現錯誤
            //從Exception取得正確的SHA256值
            //.add(hostname, "sha256/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=")
            //第二次第二次填入正確得SHA256,填入後執行成功完成驗證
            .add(hostname, "sha256/tl87oc9yrrqJ46gC3uBMBqBed5wM/qzdbLjO+1XE4to=")
            .add(hostname, "sha256/YLh1dUR9y6Kja30RrAn7JKnbQG/uEtLMkBgFF2Fuihg=")
            .add(hostname, "sha256/Vjs8r4z+80wjNcr1YKepWQboSIRi63WsWXhIMN+eWys=")
            //....
            .build();
        OkHttpClient client = new OkHttpClient.Builder()
            .certificatePinner(certificatePinner)
            .build();

        Request request = new Request.Builder()
            .url("https://" + hostname)
            .build();
        try {
            client.newCall(request).execute();
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }
}).start();
{% endhighlight %}   
第一次執行憑證綁定失敗如下圖  
![圖片1](https://github.com/Li-Chao-Chang/Blog/raw/master/_posts/images/20200420/androidCerPic.jpg)  

AndroidStudio(Java)
[專案檔下載](https://github.com/Li-Chao-Chang/AndroidCertificatePinner)  

[jekyll-docs]: https://jekyllrb.com/docs/home
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/
